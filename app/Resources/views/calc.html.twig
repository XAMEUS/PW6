{% extends 'base.html.twig' %}

{% block title %}Spreadsheet {{columns}}x{{rows}}{% endblock %}

{% block stylesheets %}
<style>
#calc th {
    text-align: center;
}
#calc td {
    text-align: right;
}
</style>
{% endblock %}

{% block help %}

<div style="padding:12px; background:#fefefe;color:#333">
    <h4>This is a simple spreadsheet. &nbsp; ლ(´ڡ`ლ)</h4>
    <p>You can use these functions:<p>
    <ul>
        <li>
            <p><strong>agv A0,B1</strong> : to calculate the average of {A0, A1, B0, B1}.</p>
        </li>
        <li>
            <p><strong>sum A0,B1</strong> : to calculate the sum of {A0, A1, B0, B1}.</p>
        </li>
        <li>
            <p><strong>med A0,B1</strong> : to calculate the median of {A0, A1, B0, B1}.</p>
        </li>
    </ul>
</div>
<hr>

<div style="padding:12px; background:#fefefe;color:#333; margin-bottom:12px">
    <h4>Details</h4>
    <ul>
        <li>
            <p><kbd>enter</kbd> : validate, go to the next cel (y+1).</p>
        </li>
        <li>
            <p><kbd>tab</kbd> : validate, go to the next cel (x+1).</p>
        </li>
        <li>
            <p><kbd><kbd>shift</kbd> + <kbd>tab</kbd></kbd> : validate, go to the previous cel (x-1).</p>
        </li>
        <li>
            <p><strong>cel.focus</strong> : on focus, select the current content.</p>
        </li>
        <li>
            <p><strong>cel.focusout</strong> : when focus is lost, evaluate.</p>
        </li>
    </ul>
</div>
{% endblock %}

{% block body %}

<div class="container top-buffer" id="aze">

    <form class="form-horizontal" method="post" action="/spreadsheet">
        <div class="form-group">
            <div class="col-md-6">
                <div class="form-group row">
                    <label for="columns" class="col-md-2 control-label">columns</label>
                    <div class="col-md-2">
                        <input type="number" min="1" max="26" class="form-control" name="columns" placeholder="">
                    </div>
                    <label for="rows" class="col-md-2 control-label">rows</label>
                    <div class="col-md-2">
                        <input type="number" min="1" max="100" class="form-control" name="rows" placeholder="">
                    </div>
                    <div class="col-md-4">
                        <button class="btn btn-primary btn-block" type="submit">New spreadsheet</button>
                    </div>
                </div>
            </div>
        </div>
    </form>

    <div class="table-responsive">
        <table class="table table-bordered table-striped" id="calc">
        <thead>
          <tr id="table-x">
          </tr>
        </thead>
        <tbody id="tbody">

        </tbody>
        </table>
    </div>

</div> <!-- /container -->
{% endblock %}

{% block javascripts %}

<script src="http://code.jquery.com/jquery-1.11.3.js"></script>
<script type="text/javascript">
var xsize = {{ columns }};
var yszie = {{ rows }};
var a = "abcdefghijklmnopqrstuvwxyz".toUpperCase();
$(document).ready(function(){
    $("#table-x").append("<th></th>");
    for (i = 0; i < xsize; i++) {
        $("#table-x").append("<th>"+a.charAt(i)+"</th>");
    }
    for (i = 0; i < yszie; i++) {
        var l = "";
        for (j = 0; j < xsize; j++) {
            l += "<td contenteditable='true' id='"+a.charAt(j)+i+"'></td>"
        }
        $("#tbody").append(
            "<tr>"+
            "<th>"+i+"</th>"+
            l+
            "</tr>"
        );
    }
    $("tbody").find('td').each(function() {
        $(this).keydown(function(e) {
            if (e.keyCode === 13) {
              return false;
            }
          });
        $(this).keyup(function(e) {
            if(e.keyCode == 13) // ENTER
            {
                $("#"+this.id.substring(0, 1)+(parseInt(this.id.substring(1))+1)).focus();
            }
        });
        $(this).focus(function(e) {
            $(this).selectText();
        });
        $(this).focusout(function(e) {
            var data = $(this).html();
            var v = eval(data);
            if (v != "0" || (v != data && data != "0"))
                $(this).html(v);
        });
    });
});
function eval(s) {
    s = s.replace("<br>", "");
    var exp = /(?:^|\s)avg\s*(.*?),\s*(.*?)(?:\s|$)/g;
    var match = exp.exec(s);
    if (match) {
        var x0 = match[1].substring(0, 1);
        var y0 = parseInt(match[1].substring(1));
        var x1 = match[2].substring(0, 1);
        var y1 = parseInt(match[2].substring(1));
        var b = 0; var n = 0;
        for (i = a.indexOf(x0); i <= a.indexOf(x1); i++) {
            for (j = y0; j <= y1; j++) {
                var pos = a.charAt(i) + j;
                b += parseFloat(eval($("#"+pos).html()));
                n++;
            }
        }
        return b / n;
    }
    var exp = /(?:^|\s)sum\s*(.*?),\s*(.*?)(?:\s|$)/g;
    var match = exp.exec(s);
    if (match) {
        var x0 = match[1].substring(0, 1);
        var y0 = parseInt(match[1].substring(1));
        var x1 = match[2].substring(0, 1);
        var y1 = parseInt(match[2].substring(1));
        var b = 0; var n = 0;
        for (i = a.indexOf(x0); i <= a.indexOf(x1); i++) {
            for (j = y0; j <= y1; j++) {
                var pos = a.charAt(i) + j;
                b += parseFloat(eval($("#"+pos).html()));
                n++;
            }
        }
        return b;
    }
    var exp = /(?:^|\s)med\s*(.*?),\s*(.*?)(?:\s|$)/g;
    var match = exp.exec(s);
    if (match) {
        var x0 = match[1].substring(0, 1);
        var y0 = parseInt(match[1].substring(1));
        var x1 = match[2].substring(0, 1);
        var y1 = parseInt(match[2].substring(1));
        var b = []; var n = 0;
        for (i = a.indexOf(x0); i <= a.indexOf(x1); i++) {
            for (j = y0; j <= y1; j++) {
                var pos = a.charAt(i) + j;
                b.push(parseFloat(eval($("#"+pos).html())));
                n++;
            }
        }
        b = b.sort();
        alert(b);
        return b[Math.floor((n + 1) / 2)];
    }
    if (s == "") return 0;
    return s;
}
jQuery.fn.selectText = function(){
   var doc = document;
   var element = this[0];
   console.log(this, element);
   if (doc.body.createTextRange) {
       var range = document.body.createTextRange();
       range.moveToElementText(element);
       range.select();
   } else if (window.getSelection) {
       var selection = window.getSelection();
       var range = document.createRange();
       range.selectNodeContents(element);
       selection.removeAllRanges();
       selection.addRange(range);
   }
};
</script>

{% endblock %}
